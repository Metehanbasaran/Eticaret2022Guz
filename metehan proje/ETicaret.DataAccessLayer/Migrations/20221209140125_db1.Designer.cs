// <auto-generated />
using System;
using ETicaret.DataAccessLayer.Concretes.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETicaret.DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221209140125_db1")]
    partial class db1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ETicaret.EntityLayer.Concretes.Commet", b =>
                {
                    b.Property<int>("CommetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommetDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<bool>("CommetStatu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CommetSurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommetText")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("commentingperson")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CommetId");

                    b.ToTable("Commeties");

                    b.HasData(
                        new
                        {
                            CommetId = 1,
                            CommetDateTime = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommetStatu = true,
                            CommetSurName = "Kalmış",
                            CommetText = "Güzelllmişşş",
                            commentingperson = "Ahmet"
                        });
                });

            modelBuilder.Entity("ETicaret.EntityLayer.Concretes.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<short>("SortKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SubCategoryStatu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("SubCategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            SubCategoryId = 1,
                            CategoryId = 0,
                            SortKey = (short)1,
                            SubCategoryName = "Bilgisayar",
                            SubCategoryStatu = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
